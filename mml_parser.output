Terminals unused in grammar

    tPRIVATE


Grammar

    0 $accept: file $end

    1 file: ε
    2     | vardecs
    3     | program
    4     | vardecs program

    5 program: tBEGIN tEND
    6        | tBEGIN vardecs tEND
    7        | tBEGIN instructions tEND
    8        | tBEGIN vardecs instructions tEND

    9 vardecs: vardec ';'
   10        | vardecs vardec ';'

   11 instructions: instruction
   12             | instructions instruction

   13 instruction: expr ';'
   14            | args tWRITE
   15            | args tWRITELN
   16            | tWHILE '(' expr ')' inst
   17            | tIF '(' expr ')' inst
   18            | tIF '(' expr ')' inst iffalse
   19            | block
   20            | stop ';'
   21            | next ';'
   22            | return ';'

   23 iffalse: tELIF '(' expr ')' inst
   24        | tELIF '(' expr ')' inst iffalse
   25        | tELSE instruction

   26 inst: expr ';'
   27     | args tWRITE
   28     | args tWRITELN
   29     | tWHILE '(' expr ')' inst
   30     | tIF '(' expr ')' inst
   31     | block
   32     | stop ';'
   33     | next ';'
   34     | return ';'

   35 vardec: tPUBLIC data_type tIDENTIFIER opt_initializer
   36       | tFOREIGN func_type tIDENTIFIER
   37       | tFORWARD data_type tIDENTIFIER
   38       | data_type tIDENTIFIER opt_initializer
   39       | tPUBLIC tIDENTIFIER '=' expr
   40       | tPUBLIC tTYPE_AUTO tIDENTIFIER '=' expr
   41       | tTYPE_AUTO tIDENTIFIER '=' expr

   42 data_type: tTYPE_STRING
   43          | tTYPE_INT
   44          | tTYPE_REAL
   45          | tTYPE_VOID
   46          | '[' data_type ']'
   47          | func_type

   48 opt_type_seq: ε
   49             | type_seq

   50 type_seq: data_type
   51         | type_seq ',' data_type

   52 func_type: data_type '<' opt_type_seq '>'

   53 fdef: '(' argdecs ')' tARROW data_type block

   54 fcall: lval '(' args ')'
   55      | '(' expr ')' '(' args ')'
   56      | tRECURSION '(' args ')'

   57 opt_initializer: ε
   58                | '=' expr

   59 block: '{' '}'
   60      | '{' vardecs '}'
   61      | '{' instructions '}'
   62      | '{' vardecs instructions '}'

   63 stop: tSTOP
   64     | tSTOP tINTEGER

   65 next: tNEXT
   66     | tNEXT tINTEGER

   67 return: tRETURN
   68       | tRETURN expr

   69 argdecs: ε
   70        | argdec
   71        | argdecs ',' argdec

   72 argdec: data_type tIDENTIFIER

   73 args: ε
   74     | expr
   75     | args ',' expr

   76 lval: tIDENTIFIER
   77     | lval '[' expr ']'
   78     | '(' expr ')' '[' expr ']'

   79 expr: integer
   80     | real
   81     | string
   82     | tNULLPTR
   83     | lval
   84     | lval '=' expr
   85     | expr '+' expr
   86     | expr '-' expr
   87     | expr '*' expr
   88     | expr '/' expr
   89     | expr '%' expr
   90     | expr '<' expr
   91     | expr '>' expr
   92     | expr tGE expr
   93     | expr tLE expr
   94     | expr tNE expr
   95     | expr tEQ expr
   96     | expr tAND expr
   97     | expr tOR expr
   98     | '-' expr
   99     | '+' expr
  100     | lval tADDRESSOF
  101     | '~' expr
  102     | tREAD
  103     | fdef
  104     | fcall
  105     | tSIZEOF '(' expr ')'
  106     | '(' expr ')'
  107     | '[' expr ']'

  108 integer: tINTEGER

  109 real: tREAL

  110 string: tSTRING
  111       | string tSTRING


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 89
    '(' (40) 16 17 18 23 24 29 30 53 54 55 56 78 105 106
    ')' (41) 16 17 18 23 24 29 30 53 54 55 56 78 105 106
    '*' (42) 87
    '+' (43) 85 99
    ',' (44) 51 71 75
    '-' (45) 86 98
    '/' (47) 88
    ';' (59) 9 10 13 20 21 22 26 32 33 34
    '<' (60) 52 90
    '=' (61) 39 40 41 58 84
    '>' (62) 52 91
    '[' (91) 46 77 78 107
    ']' (93) 46 77 78 107
    '{' (123) 59 60 61 62
    '}' (125) 59 60 61 62
    '~' (126) 101
    error (256)
    tINTEGER <i> (258) 64 66 108
    tREAL <d> (259) 109
    tIDENTIFIER <s> (260) 35 36 37 38 39 40 41 72 76
    tSTRING <s> (261) 110 111
    tNULLPTR <expression> (262) 82
    tWHILE (263) 16 29
    tIF (264) 17 18 30
    tBEGIN (265) 5 6 7 8
    tEND (266) 5 6 7 8
    tWRITE (267) 14 27
    tWRITELN (268) 15 28
    tREAD (269) 102
    tARROW (270) 53
    tTYPE_STRING (271) 42
    tTYPE_INT (272) 43
    tTYPE_REAL (273) 44
    tTYPE_VOID (274) 45
    tTYPE_AUTO (275) 40 41
    tPUBLIC (276) 35 39 40
    tFORWARD (277) 37
    tFOREIGN (278) 36
    tPRIVATE (279)
    tSTOP (280) 63 64
    tNEXT (281) 65 66
    tRETURN (282) 67 68
    tRECURSION (283) 56
    tSIZEOF (284) 105
    tADDRESSOF (285) 100
    tIFX (286)
    tELIF (287) 23 24
    tELSE (288) 25
    tUNARY (289)
    tOR (290) 97
    tAND (291) 96
    tGE (292) 92
    tLE (293) 93
    tEQ (294) 95
    tNE (295) 94


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    file <node> (59)
        on left: 1 2 3 4
        on right: 0
    program <node> (60)
        on left: 5 6 7 8
        on right: 3 4
    vardecs <sequence> (61)
        on left: 9 10
        on right: 2 4 6 8 10 60 62
    instructions <sequence> (62)
        on left: 11 12
        on right: 7 8 12 61 62
    instruction <node> (63)
        on left: 13 14 15 16 17 18 19 20 21 22
        on right: 11 12 25
    iffalse <node> (64)
        on left: 23 24 25
        on right: 18 24
    inst <node> (65)
        on left: 26 27 28 29 30 31 32 33 34
        on right: 16 17 18 23 24 29 30
    vardec <node> (66)
        on left: 35 36 37 38 39 40 41
        on right: 9 10
    data_type <type> (67)
        on left: 42 43 44 45 46 47
        on right: 35 37 38 46 50 51 52 53 72
    opt_type_seq <ts> (68)
        on left: 48 49
        on right: 52
    type_seq <ts> (69)
        on left: 50 51
        on right: 49 51
    func_type <type> (70)
        on left: 52
        on right: 36 47
    fdef <expression> (71)
        on left: 53
        on right: 103
    fcall <expression> (72)
        on left: 54 55 56
        on right: 104
    opt_initializer <expression> (73)
        on left: 57 58
        on right: 35 38
    block <block> (74)
        on left: 59 60 61 62
        on right: 19 31 53
    stop <node> (75)
        on left: 63 64
        on right: 20 32
    next <node> (76)
        on left: 65 66
        on right: 21 33
    return <node> (77)
        on left: 67 68
        on right: 22 34
    argdecs <sequence> (78)
        on left: 69 70 71
        on right: 53 71
    argdec <node> (79)
        on left: 72
        on right: 70 71
    args <sequence> (80)
        on left: 73 74 75
        on right: 14 15 27 28 54 55 56 75
    lval <lvalue> (81)
        on left: 76 77 78
        on right: 54 77 83 84 100
    expr <expression> (82)
        on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 13 16 17 18 23 24 26 29 30 39 40 41 55 58 68 74 75 77 78 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 101 105 106 107
    integer <expression> (83)
        on left: 108
        on right: 79
    real <expression> (84)
        on left: 109
        on right: 80
    string <s> (85)
        on left: 110 111
        on right: 81 111


State 0

    0 $accept: • file $end

    tBEGIN        shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tFORWARD      shift, and go to state 8
    tFOREIGN      shift, and go to state 9
    '['           shift, and go to state 10

    $default  reduce using rule 1 (file)

    file       go to state 11
    program    go to state 12
    vardecs    go to state 13
    vardec     go to state 14
    data_type  go to state 15
    func_type  go to state 16


State 1

    5 program: tBEGIN • tEND
    6        | tBEGIN • vardecs tEND
    7        | tBEGIN • instructions tEND
    8        | tBEGIN • vardecs instructions tEND

    tINTEGER      shift, and go to state 17
    tREAL         shift, and go to state 18
    tIDENTIFIER   shift, and go to state 19
    tSTRING       shift, and go to state 20
    tNULLPTR      shift, and go to state 21
    tWHILE        shift, and go to state 22
    tIF           shift, and go to state 23
    tEND          shift, and go to state 24
    tREAD         shift, and go to state 25
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tFORWARD      shift, and go to state 8
    tFOREIGN      shift, and go to state 9
    tSTOP         shift, and go to state 26
    tNEXT         shift, and go to state 27
    tRETURN       shift, and go to state 28
    tRECURSION    shift, and go to state 29
    tSIZEOF       shift, and go to state 30
    '+'           shift, and go to state 31
    '-'           shift, and go to state 32
    '('           shift, and go to state 33
    '['           shift, and go to state 34
    '{'           shift, and go to state 35
    '~'           shift, and go to state 36

    $default  reduce using rule 73 (args)

    vardecs       go to state 37
    instructions  go to state 38
    instruction   go to state 39
    vardec        go to state 14
    data_type     go to state 15
    func_type     go to state 16
    fdef          go to state 40
    fcall         go to state 41
    block         go to state 42
    stop          go to state 43
    next          go to state 44
    return        go to state 45
    args          go to state 46
    lval          go to state 47
    expr          go to state 48
    integer       go to state 49
    real          go to state 50
    string        go to state 51


State 2

   42 data_type: tTYPE_STRING •

    $default  reduce using rule 42 (data_type)


State 3

   43 data_type: tTYPE_INT •

    $default  reduce using rule 43 (data_type)


State 4

   44 data_type: tTYPE_REAL •

    $default  reduce using rule 44 (data_type)


State 5

   45 data_type: tTYPE_VOID •

    $default  reduce using rule 45 (data_type)


State 6

   41 vardec: tTYPE_AUTO • tIDENTIFIER '=' expr

    tIDENTIFIER  shift, and go to state 52


State 7

   35 vardec: tPUBLIC • data_type tIDENTIFIER opt_initializer
   39       | tPUBLIC • tIDENTIFIER '=' expr
   40       | tPUBLIC • tTYPE_AUTO tIDENTIFIER '=' expr

    tIDENTIFIER   shift, and go to state 53
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 54
    '['           shift, and go to state 10

    data_type  go to state 55
    func_type  go to state 16


State 8

   37 vardec: tFORWARD • data_type tIDENTIFIER

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    data_type  go to state 56
    func_type  go to state 16


State 9

   36 vardec: tFOREIGN • func_type tIDENTIFIER

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    data_type  go to state 57
    func_type  go to state 58


State 10

   46 data_type: '[' • data_type ']'

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    data_type  go to state 59
    func_type  go to state 16


State 11

    0 $accept: file • $end

    $end  shift, and go to state 60


State 12

    3 file: program •

    $default  reduce using rule 3 (file)


State 13

    2 file: vardecs •
    4     | vardecs • program
   10 vardecs: vardecs • vardec ';'

    tBEGIN        shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tFORWARD      shift, and go to state 8
    tFOREIGN      shift, and go to state 9
    '['           shift, and go to state 10

    $default  reduce using rule 2 (file)

    program    go to state 61
    vardec     go to state 62
    data_type  go to state 15
    func_type  go to state 16


State 14

    9 vardecs: vardec • ';'

    ';'  shift, and go to state 63


State 15

   38 vardec: data_type • tIDENTIFIER opt_initializer
   52 func_type: data_type • '<' opt_type_seq '>'

    tIDENTIFIER  shift, and go to state 64
    '<'          shift, and go to state 65


State 16

   47 data_type: func_type •

    $default  reduce using rule 47 (data_type)


State 17

  108 integer: tINTEGER •

    $default  reduce using rule 108 (integer)


State 18

  109 real: tREAL •

    $default  reduce using rule 109 (real)


State 19

   76 lval: tIDENTIFIER •

    $default  reduce using rule 76 (lval)


State 20

  110 string: tSTRING •

    $default  reduce using rule 110 (string)


State 21

   82 expr: tNULLPTR •

    $default  reduce using rule 82 (expr)


State 22

   16 instruction: tWHILE • '(' expr ')' inst

    '('  shift, and go to state 66


State 23

   17 instruction: tIF • '(' expr ')' inst
   18            | tIF • '(' expr ')' inst iffalse

    '('  shift, and go to state 67


State 24

    5 program: tBEGIN tEND •

    $default  reduce using rule 5 (program)


State 25

  102 expr: tREAD •

    $default  reduce using rule 102 (expr)


State 26

   63 stop: tSTOP •
   64     | tSTOP • tINTEGER

    tINTEGER  shift, and go to state 68

    $default  reduce using rule 63 (stop)


State 27

   65 next: tNEXT •
   66     | tNEXT • tINTEGER

    tINTEGER  shift, and go to state 69

    $default  reduce using rule 65 (next)


State 28

   67 return: tRETURN •
   68       | tRETURN • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    $default  reduce using rule 67 (return)

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 71
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 29

   56 fcall: tRECURSION • '(' args ')'

    '('  shift, and go to state 72


State 30

  105 expr: tSIZEOF • '(' expr ')'

    '('  shift, and go to state 73


State 31

   99 expr: '+' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 74
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 32

   98 expr: '-' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 75
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 33

   53 fdef: '(' • argdecs ')' tARROW data_type block
   55 fcall: '(' • expr ')' '(' args ')'
   78 lval: '(' • expr ')' '[' expr ']'
  106 expr: '(' • expr ')'

    tINTEGER      shift, and go to state 17
    tREAL         shift, and go to state 18
    tIDENTIFIER   shift, and go to state 19
    tSTRING       shift, and go to state 20
    tNULLPTR      shift, and go to state 21
    tREAD         shift, and go to state 25
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tRECURSION    shift, and go to state 29
    tSIZEOF       shift, and go to state 30
    '+'           shift, and go to state 31
    '-'           shift, and go to state 32
    '('           shift, and go to state 33
    '['           shift, and go to state 34
    '~'           shift, and go to state 36

    $default  reduce using rule 69 (argdecs)

    data_type  go to state 76
    func_type  go to state 16
    fdef       go to state 40
    fcall      go to state 41
    argdecs    go to state 77
    argdec     go to state 78
    lval       go to state 47
    expr       go to state 79
    integer    go to state 49
    real       go to state 50
    string     go to state 51


State 34

   46 data_type: '[' • data_type ']'
  107 expr: '[' • expr ']'

    tINTEGER      shift, and go to state 17
    tREAL         shift, and go to state 18
    tIDENTIFIER   shift, and go to state 19
    tSTRING       shift, and go to state 20
    tNULLPTR      shift, and go to state 21
    tREAD         shift, and go to state 25
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tRECURSION    shift, and go to state 29
    tSIZEOF       shift, and go to state 30
    '+'           shift, and go to state 31
    '-'           shift, and go to state 32
    '('           shift, and go to state 33
    '['           shift, and go to state 34
    '~'           shift, and go to state 36

    data_type  go to state 59
    func_type  go to state 16
    fdef       go to state 40
    fcall      go to state 41
    lval       go to state 47
    expr       go to state 80
    integer    go to state 49
    real       go to state 50
    string     go to state 51


State 35

   59 block: '{' • '}'
   60      | '{' • vardecs '}'
   61      | '{' • instructions '}'
   62      | '{' • vardecs instructions '}'

    tINTEGER      shift, and go to state 17
    tREAL         shift, and go to state 18
    tIDENTIFIER   shift, and go to state 19
    tSTRING       shift, and go to state 20
    tNULLPTR      shift, and go to state 21
    tWHILE        shift, and go to state 22
    tIF           shift, and go to state 23
    tREAD         shift, and go to state 25
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tFORWARD      shift, and go to state 8
    tFOREIGN      shift, and go to state 9
    tSTOP         shift, and go to state 26
    tNEXT         shift, and go to state 27
    tRETURN       shift, and go to state 28
    tRECURSION    shift, and go to state 29
    tSIZEOF       shift, and go to state 30
    '+'           shift, and go to state 31
    '-'           shift, and go to state 32
    '('           shift, and go to state 33
    '['           shift, and go to state 34
    '{'           shift, and go to state 35
    '}'           shift, and go to state 81
    '~'           shift, and go to state 36

    $default  reduce using rule 73 (args)

    vardecs       go to state 82
    instructions  go to state 83
    instruction   go to state 39
    vardec        go to state 14
    data_type     go to state 15
    func_type     go to state 16
    fdef          go to state 40
    fcall         go to state 41
    block         go to state 42
    stop          go to state 43
    next          go to state 44
    return        go to state 45
    args          go to state 46
    lval          go to state 47
    expr          go to state 48
    integer       go to state 49
    real          go to state 50
    string        go to state 51


State 36

  101 expr: '~' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 84
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 37

    6 program: tBEGIN vardecs • tEND
    8        | tBEGIN vardecs • instructions tEND
   10 vardecs: vardecs • vardec ';'

    tINTEGER      shift, and go to state 17
    tREAL         shift, and go to state 18
    tIDENTIFIER   shift, and go to state 19
    tSTRING       shift, and go to state 20
    tNULLPTR      shift, and go to state 21
    tWHILE        shift, and go to state 22
    tIF           shift, and go to state 23
    tEND          shift, and go to state 85
    tREAD         shift, and go to state 25
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tFORWARD      shift, and go to state 8
    tFOREIGN      shift, and go to state 9
    tSTOP         shift, and go to state 26
    tNEXT         shift, and go to state 27
    tRETURN       shift, and go to state 28
    tRECURSION    shift, and go to state 29
    tSIZEOF       shift, and go to state 30
    '+'           shift, and go to state 31
    '-'           shift, and go to state 32
    '('           shift, and go to state 33
    '['           shift, and go to state 34
    '{'           shift, and go to state 35
    '~'           shift, and go to state 36

    $default  reduce using rule 73 (args)

    instructions  go to state 86
    instruction   go to state 39
    vardec        go to state 62
    data_type     go to state 15
    func_type     go to state 16
    fdef          go to state 40
    fcall         go to state 41
    block         go to state 42
    stop          go to state 43
    next          go to state 44
    return        go to state 45
    args          go to state 46
    lval          go to state 47
    expr          go to state 48
    integer       go to state 49
    real          go to state 50
    string        go to state 51


State 38

    7 program: tBEGIN instructions • tEND
   12 instructions: instructions • instruction

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 22
    tIF          shift, and go to state 23
    tEND         shift, and go to state 87
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    instruction  go to state 88
    fdef         go to state 40
    fcall        go to state 41
    block        go to state 42
    stop         go to state 43
    next         go to state 44
    return       go to state 45
    args         go to state 46
    lval         go to state 47
    expr         go to state 48
    integer      go to state 49
    real         go to state 50
    string       go to state 51


State 39

   11 instructions: instruction •

    $default  reduce using rule 11 (instructions)


State 40

  103 expr: fdef •

    $default  reduce using rule 103 (expr)


State 41

  104 expr: fcall •

    $default  reduce using rule 104 (expr)


State 42

   19 instruction: block •

    $default  reduce using rule 19 (instruction)


State 43

   20 instruction: stop • ';'

    ';'  shift, and go to state 89


State 44

   21 instruction: next • ';'

    ';'  shift, and go to state 90


State 45

   22 instruction: return • ';'

    ';'  shift, and go to state 91


State 46

   14 instruction: args • tWRITE
   15            | args • tWRITELN
   75 args: args • ',' expr

    tWRITE    shift, and go to state 92
    tWRITELN  shift, and go to state 93
    ','       shift, and go to state 94


State 47

   54 fcall: lval • '(' args ')'
   77 lval: lval • '[' expr ']'
   83 expr: lval •
   84     | lval • '=' expr
  100     | lval • tADDRESSOF

    tADDRESSOF  shift, and go to state 95
    '='         shift, and go to state 96
    '('         shift, and go to state 97
    '['         shift, and go to state 98

    $default  reduce using rule 83 (expr)


State 48

   13 instruction: expr • ';'
   74 args: expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ';'   shift, and go to state 112

    $default  reduce using rule 74 (args)


State 49

   79 expr: integer •

    $default  reduce using rule 79 (expr)


State 50

   80 expr: real •

    $default  reduce using rule 80 (expr)


State 51

   81 expr: string •
  111 string: string • tSTRING

    tSTRING  shift, and go to state 113

    $default  reduce using rule 81 (expr)


State 52

   41 vardec: tTYPE_AUTO tIDENTIFIER • '=' expr

    '='  shift, and go to state 114


State 53

   39 vardec: tPUBLIC tIDENTIFIER • '=' expr

    '='  shift, and go to state 115


State 54

   40 vardec: tPUBLIC tTYPE_AUTO • tIDENTIFIER '=' expr

    tIDENTIFIER  shift, and go to state 116


State 55

   35 vardec: tPUBLIC data_type • tIDENTIFIER opt_initializer
   52 func_type: data_type • '<' opt_type_seq '>'

    tIDENTIFIER  shift, and go to state 117
    '<'          shift, and go to state 65


State 56

   37 vardec: tFORWARD data_type • tIDENTIFIER
   52 func_type: data_type • '<' opt_type_seq '>'

    tIDENTIFIER  shift, and go to state 118
    '<'          shift, and go to state 65


State 57

   52 func_type: data_type • '<' opt_type_seq '>'

    '<'  shift, and go to state 65


State 58

   36 vardec: tFOREIGN func_type • tIDENTIFIER
   47 data_type: func_type •

    tIDENTIFIER  shift, and go to state 119

    $default  reduce using rule 47 (data_type)


State 59

   46 data_type: '[' data_type • ']'
   52 func_type: data_type • '<' opt_type_seq '>'

    '<'  shift, and go to state 65
    ']'  shift, and go to state 120


State 60

    0 $accept: file $end •

    $default  accept


State 61

    4 file: vardecs program •

    $default  reduce using rule 4 (file)


State 62

   10 vardecs: vardecs vardec • ';'

    ';'  shift, and go to state 121


State 63

    9 vardecs: vardec ';' •

    $default  reduce using rule 9 (vardecs)


State 64

   38 vardec: data_type tIDENTIFIER • opt_initializer

    '='  shift, and go to state 122

    $default  reduce using rule 57 (opt_initializer)

    opt_initializer  go to state 123


State 65

   52 func_type: data_type '<' • opt_type_seq '>'

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    $default  reduce using rule 48 (opt_type_seq)

    data_type     go to state 124
    opt_type_seq  go to state 125
    type_seq      go to state 126
    func_type     go to state 16


State 66

   16 instruction: tWHILE '(' • expr ')' inst

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 127
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 67

   17 instruction: tIF '(' • expr ')' inst
   18            | tIF '(' • expr ')' inst iffalse

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 128
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 68

   64 stop: tSTOP tINTEGER •

    $default  reduce using rule 64 (stop)


State 69

   66 next: tNEXT tINTEGER •

    $default  reduce using rule 66 (next)


State 70

  107 expr: '[' • expr ']'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 80
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 71

   68 return: tRETURN expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 68 (return)


State 72

   56 fcall: tRECURSION '(' • args ')'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    fdef     go to state 40
    fcall    go to state 41
    args     go to state 129
    lval     go to state 47
    expr     go to state 130
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 73

  105 expr: tSIZEOF '(' • expr ')'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 131
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 74

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
   99     | '+' expr •

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 99 (expr)


State 75

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
   98     | '-' expr •

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 98 (expr)


State 76

   52 func_type: data_type • '<' opt_type_seq '>'
   72 argdec: data_type • tIDENTIFIER

    tIDENTIFIER  shift, and go to state 132
    '<'          shift, and go to state 65


State 77

   53 fdef: '(' argdecs • ')' tARROW data_type block
   71 argdecs: argdecs • ',' argdec

    ')'  shift, and go to state 133
    ','  shift, and go to state 134


State 78

   70 argdecs: argdec •

    $default  reduce using rule 70 (argdecs)


State 79

   55 fcall: '(' expr • ')' '(' args ')'
   78 lval: '(' expr • ')' '[' expr ']'
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
  106     | '(' expr • ')'

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 135


State 80

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
  107     | '[' expr • ']'

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ']'   shift, and go to state 136


State 81

   59 block: '{' '}' •

    $default  reduce using rule 59 (block)


State 82

   10 vardecs: vardecs • vardec ';'
   60 block: '{' vardecs • '}'
   62      | '{' vardecs • instructions '}'

    tINTEGER      shift, and go to state 17
    tREAL         shift, and go to state 18
    tIDENTIFIER   shift, and go to state 19
    tSTRING       shift, and go to state 20
    tNULLPTR      shift, and go to state 21
    tWHILE        shift, and go to state 22
    tIF           shift, and go to state 23
    tREAD         shift, and go to state 25
    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    tTYPE_AUTO    shift, and go to state 6
    tPUBLIC       shift, and go to state 7
    tFORWARD      shift, and go to state 8
    tFOREIGN      shift, and go to state 9
    tSTOP         shift, and go to state 26
    tNEXT         shift, and go to state 27
    tRETURN       shift, and go to state 28
    tRECURSION    shift, and go to state 29
    tSIZEOF       shift, and go to state 30
    '+'           shift, and go to state 31
    '-'           shift, and go to state 32
    '('           shift, and go to state 33
    '['           shift, and go to state 34
    '{'           shift, and go to state 35
    '}'           shift, and go to state 137
    '~'           shift, and go to state 36

    $default  reduce using rule 73 (args)

    instructions  go to state 138
    instruction   go to state 39
    vardec        go to state 62
    data_type     go to state 15
    func_type     go to state 16
    fdef          go to state 40
    fcall         go to state 41
    block         go to state 42
    stop          go to state 43
    next          go to state 44
    return        go to state 45
    args          go to state 46
    lval          go to state 47
    expr          go to state 48
    integer       go to state 49
    real          go to state 50
    string        go to state 51


State 83

   12 instructions: instructions • instruction
   61 block: '{' instructions • '}'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 22
    tIF          shift, and go to state 23
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '}'          shift, and go to state 139
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    instruction  go to state 88
    fdef         go to state 40
    fcall        go to state 41
    block        go to state 42
    stop         go to state 43
    next         go to state 44
    return       go to state 45
    args         go to state 46
    lval         go to state 47
    expr         go to state 48
    integer      go to state 49
    real         go to state 50
    string       go to state 51


State 84

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
  101     | '~' expr •

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 101 (expr)


State 85

    6 program: tBEGIN vardecs tEND •

    $default  reduce using rule 6 (program)


State 86

    8 program: tBEGIN vardecs instructions • tEND
   12 instructions: instructions • instruction

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 22
    tIF          shift, and go to state 23
    tEND         shift, and go to state 140
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    instruction  go to state 88
    fdef         go to state 40
    fcall        go to state 41
    block        go to state 42
    stop         go to state 43
    next         go to state 44
    return       go to state 45
    args         go to state 46
    lval         go to state 47
    expr         go to state 48
    integer      go to state 49
    real         go to state 50
    string       go to state 51


State 87

    7 program: tBEGIN instructions tEND •

    $default  reduce using rule 7 (program)


State 88

   12 instructions: instructions instruction •

    $default  reduce using rule 12 (instructions)


State 89

   20 instruction: stop ';' •

    $default  reduce using rule 20 (instruction)


State 90

   21 instruction: next ';' •

    $default  reduce using rule 21 (instruction)


State 91

   22 instruction: return ';' •

    $default  reduce using rule 22 (instruction)


State 92

   14 instruction: args tWRITE •

    $default  reduce using rule 14 (instruction)


State 93

   15 instruction: args tWRITELN •

    $default  reduce using rule 15 (instruction)


State 94

   75 args: args ',' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 141
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 95

  100 expr: lval tADDRESSOF •

    $default  reduce using rule 100 (expr)


State 96

   84 expr: lval '=' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 142
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 97

   54 fcall: lval '(' • args ')'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    fdef     go to state 40
    fcall    go to state 41
    args     go to state 143
    lval     go to state 47
    expr     go to state 130
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 98

   77 lval: lval '[' • expr ']'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 144
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 99

   97 expr: expr tOR • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 145
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 100

   96 expr: expr tAND • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 146
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 101

   90 expr: expr '<' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 147
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 102

   91 expr: expr '>' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 148
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 103

   92 expr: expr tGE • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 149
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 104

   93 expr: expr tLE • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 150
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 105

   95 expr: expr tEQ • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 151
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 106

   94 expr: expr tNE • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 152
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 107

   85 expr: expr '+' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 153
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 108

   86 expr: expr '-' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 154
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 109

   87 expr: expr '*' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 155
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 110

   88 expr: expr '/' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 156
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 111

   89 expr: expr '%' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 157
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 112

   13 instruction: expr ';' •

    $default  reduce using rule 13 (instruction)


State 113

  111 string: string tSTRING •

    $default  reduce using rule 111 (string)


State 114

   41 vardec: tTYPE_AUTO tIDENTIFIER '=' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 158
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 115

   39 vardec: tPUBLIC tIDENTIFIER '=' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 159
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 116

   40 vardec: tPUBLIC tTYPE_AUTO tIDENTIFIER • '=' expr

    '='  shift, and go to state 160


State 117

   35 vardec: tPUBLIC data_type tIDENTIFIER • opt_initializer

    '='  shift, and go to state 122

    $default  reduce using rule 57 (opt_initializer)

    opt_initializer  go to state 161


State 118

   37 vardec: tFORWARD data_type tIDENTIFIER •

    $default  reduce using rule 37 (vardec)


State 119

   36 vardec: tFOREIGN func_type tIDENTIFIER •

    $default  reduce using rule 36 (vardec)


State 120

   46 data_type: '[' data_type ']' •

    $default  reduce using rule 46 (data_type)


State 121

   10 vardecs: vardecs vardec ';' •

    $default  reduce using rule 10 (vardecs)


State 122

   58 opt_initializer: '=' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 162
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 123

   38 vardec: data_type tIDENTIFIER opt_initializer •

    $default  reduce using rule 38 (vardec)


State 124

   50 type_seq: data_type •
   52 func_type: data_type • '<' opt_type_seq '>'

    '<'  shift, and go to state 65

    $default  reduce using rule 50 (type_seq)


State 125

   52 func_type: data_type '<' opt_type_seq • '>'

    '>'  shift, and go to state 163


State 126

   49 opt_type_seq: type_seq •
   51 type_seq: type_seq • ',' data_type

    ','  shift, and go to state 164

    $default  reduce using rule 49 (opt_type_seq)


State 127

   16 instruction: tWHILE '(' expr • ')' inst
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 165


State 128

   17 instruction: tIF '(' expr • ')' inst
   18            | tIF '(' expr • ')' inst iffalse
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 166


State 129

   56 fcall: tRECURSION '(' args • ')'
   75 args: args • ',' expr

    ')'  shift, and go to state 167
    ','  shift, and go to state 94


State 130

   74 args: expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 74 (args)


State 131

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
  105     | tSIZEOF '(' expr • ')'

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 168


State 132

   72 argdec: data_type tIDENTIFIER •

    $default  reduce using rule 72 (argdec)


State 133

   53 fdef: '(' argdecs ')' • tARROW data_type block

    tARROW  shift, and go to state 169


State 134

   71 argdecs: argdecs ',' • argdec

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    data_type  go to state 76
    func_type  go to state 16
    argdec     go to state 170


State 135

   55 fcall: '(' expr ')' • '(' args ')'
   78 lval: '(' expr ')' • '[' expr ']'
  106 expr: '(' expr ')' •

    '('  shift, and go to state 171
    '['  shift, and go to state 172

    $default  reduce using rule 106 (expr)


State 136

  107 expr: '[' expr ']' •

    $default  reduce using rule 107 (expr)


State 137

   60 block: '{' vardecs '}' •

    $default  reduce using rule 60 (block)


State 138

   12 instructions: instructions • instruction
   62 block: '{' vardecs instructions • '}'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 22
    tIF          shift, and go to state 23
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '}'          shift, and go to state 173
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    instruction  go to state 88
    fdef         go to state 40
    fcall        go to state 41
    block        go to state 42
    stop         go to state 43
    next         go to state 44
    return       go to state 45
    args         go to state 46
    lval         go to state 47
    expr         go to state 48
    integer      go to state 49
    real         go to state 50
    string       go to state 51


State 139

   61 block: '{' instructions '}' •

    $default  reduce using rule 61 (block)


State 140

    8 program: tBEGIN vardecs instructions tEND •

    $default  reduce using rule 8 (program)


State 141

   75 args: args ',' expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 75 (args)


State 142

   84 expr: lval '=' expr •
   85     | expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 84 (expr)


State 143

   54 fcall: lval '(' args • ')'
   75 args: args • ',' expr

    ')'  shift, and go to state 174
    ','  shift, and go to state 94


State 144

   77 lval: lval '[' expr • ']'
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ']'   shift, and go to state 175


State 145

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr
   97     | expr tOR expr •

    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 97 (expr)


State 146

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   96     | expr tAND expr •
   97     | expr • tOR expr

    '<'  shift, and go to state 101
    '>'  shift, and go to state 102
    tGE  shift, and go to state 103
    tLE  shift, and go to state 104
    tEQ  shift, and go to state 105
    tNE  shift, and go to state 106
    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 96 (expr)


State 147

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   90     | expr '<' expr •
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 90 (expr)


State 148

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   91     | expr '>' expr •
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 91 (expr)


State 149

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   92     | expr tGE expr •
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 92 (expr)


State 150

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   93     | expr tLE expr •
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 93 (expr)


State 151

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   95     | expr tEQ expr •
   96     | expr • tAND expr
   97     | expr • tOR expr

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 95 (expr)


State 152

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   94     | expr tNE expr •
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108
    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 94 (expr)


State 153

   85 expr: expr • '+' expr
   85     | expr '+' expr •
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 85 (expr)


State 154

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   86     | expr '-' expr •
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 86 (expr)


State 155

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   87     | expr '*' expr •
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    $default  reduce using rule 87 (expr)


State 156

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   88     | expr '/' expr •
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    $default  reduce using rule 88 (expr)


State 157

   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   89     | expr '%' expr •
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    $default  reduce using rule 89 (expr)


State 158

   41 vardec: tTYPE_AUTO tIDENTIFIER '=' expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 41 (vardec)


State 159

   39 vardec: tPUBLIC tIDENTIFIER '=' expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 39 (vardec)


State 160

   40 vardec: tPUBLIC tTYPE_AUTO tIDENTIFIER '=' • expr

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 176
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 161

   35 vardec: tPUBLIC data_type tIDENTIFIER opt_initializer •

    $default  reduce using rule 35 (vardec)


State 162

   58 opt_initializer: '=' expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 58 (opt_initializer)


State 163

   52 func_type: data_type '<' opt_type_seq '>' •

    $default  reduce using rule 52 (func_type)


State 164

   51 type_seq: type_seq ',' • data_type

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    data_type  go to state 177
    func_type  go to state 16


State 165

   16 instruction: tWHILE '(' expr ')' • inst

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 178
    tIF          shift, and go to state 179
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    inst     go to state 180
    fdef     go to state 40
    fcall    go to state 41
    block    go to state 181
    stop     go to state 182
    next     go to state 183
    return   go to state 184
    args     go to state 185
    lval     go to state 47
    expr     go to state 186
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 166

   17 instruction: tIF '(' expr ')' • inst
   18            | tIF '(' expr ')' • inst iffalse

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 178
    tIF          shift, and go to state 179
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    inst     go to state 187
    fdef     go to state 40
    fcall    go to state 41
    block    go to state 181
    stop     go to state 182
    next     go to state 183
    return   go to state 184
    args     go to state 185
    lval     go to state 47
    expr     go to state 186
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 167

   56 fcall: tRECURSION '(' args ')' •

    $default  reduce using rule 56 (fcall)


State 168

  105 expr: tSIZEOF '(' expr ')' •

    $default  reduce using rule 105 (expr)


State 169

   53 fdef: '(' argdecs ')' tARROW • data_type block

    tTYPE_STRING  shift, and go to state 2
    tTYPE_INT     shift, and go to state 3
    tTYPE_REAL    shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '['           shift, and go to state 10

    data_type  go to state 188
    func_type  go to state 16


State 170

   71 argdecs: argdecs ',' argdec •

    $default  reduce using rule 71 (argdecs)


State 171

   55 fcall: '(' expr ')' '(' • args ')'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    fdef     go to state 40
    fcall    go to state 41
    args     go to state 189
    lval     go to state 47
    expr     go to state 130
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 172

   78 lval: '(' expr ')' '[' • expr ']'

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 190
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 173

   62 block: '{' vardecs instructions '}' •

    $default  reduce using rule 62 (block)


State 174

   54 fcall: lval '(' args ')' •

    $default  reduce using rule 54 (fcall)


State 175

   77 lval: lval '[' expr ']' •

    $default  reduce using rule 77 (lval)


State 176

   40 vardec: tPUBLIC tTYPE_AUTO tIDENTIFIER '=' expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 40 (vardec)


State 177

   51 type_seq: type_seq ',' data_type •
   52 func_type: data_type • '<' opt_type_seq '>'

    '<'  shift, and go to state 65

    $default  reduce using rule 51 (type_seq)


State 178

   29 inst: tWHILE • '(' expr ')' inst

    '('  shift, and go to state 191


State 179

   30 inst: tIF • '(' expr ')' inst

    '('  shift, and go to state 192


State 180

   16 instruction: tWHILE '(' expr ')' inst •

    $default  reduce using rule 16 (instruction)


State 181

   31 inst: block •

    $default  reduce using rule 31 (inst)


State 182

   32 inst: stop • ';'

    ';'  shift, and go to state 193


State 183

   33 inst: next • ';'

    ';'  shift, and go to state 194


State 184

   34 inst: return • ';'

    ';'  shift, and go to state 195


State 185

   27 inst: args • tWRITE
   28     | args • tWRITELN
   75 args: args • ',' expr

    tWRITE    shift, and go to state 196
    tWRITELN  shift, and go to state 197
    ','       shift, and go to state 94


State 186

   26 inst: expr • ';'
   74 args: expr •
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ';'   shift, and go to state 198

    $default  reduce using rule 74 (args)


State 187

   17 instruction: tIF '(' expr ')' inst •
   18            | tIF '(' expr ')' inst • iffalse

    tELIF  shift, and go to state 199
    tELSE  shift, and go to state 200

    $default  reduce using rule 17 (instruction)

    iffalse  go to state 201


State 188

   52 func_type: data_type • '<' opt_type_seq '>'
   53 fdef: '(' argdecs ')' tARROW data_type • block

    '<'  shift, and go to state 65
    '{'  shift, and go to state 35

    block  go to state 202


State 189

   55 fcall: '(' expr ')' '(' args • ')'
   75 args: args • ',' expr

    ')'  shift, and go to state 203
    ','  shift, and go to state 94


State 190

   78 lval: '(' expr ')' '[' expr • ']'
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ']'   shift, and go to state 204


State 191

   29 inst: tWHILE '(' • expr ')' inst

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 205
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 192

   30 inst: tIF '(' • expr ')' inst

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 206
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 193

   32 inst: stop ';' •

    $default  reduce using rule 32 (inst)


State 194

   33 inst: next ';' •

    $default  reduce using rule 33 (inst)


State 195

   34 inst: return ';' •

    $default  reduce using rule 34 (inst)


State 196

   27 inst: args tWRITE •

    $default  reduce using rule 27 (inst)


State 197

   28 inst: args tWRITELN •

    $default  reduce using rule 28 (inst)


State 198

   26 inst: expr ';' •

    $default  reduce using rule 26 (inst)


State 199

   23 iffalse: tELIF • '(' expr ')' inst
   24        | tELIF • '(' expr ')' inst iffalse

    '('  shift, and go to state 207


State 200

   25 iffalse: tELSE • instruction

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 22
    tIF          shift, and go to state 23
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    instruction  go to state 208
    fdef         go to state 40
    fcall        go to state 41
    block        go to state 42
    stop         go to state 43
    next         go to state 44
    return       go to state 45
    args         go to state 46
    lval         go to state 47
    expr         go to state 48
    integer      go to state 49
    real         go to state 50
    string       go to state 51


State 201

   18 instruction: tIF '(' expr ')' inst iffalse •

    $default  reduce using rule 18 (instruction)


State 202

   53 fdef: '(' argdecs ')' tARROW data_type block •

    $default  reduce using rule 53 (fdef)


State 203

   55 fcall: '(' expr ')' '(' args ')' •

    $default  reduce using rule 55 (fcall)


State 204

   78 lval: '(' expr ')' '[' expr ']' •

    $default  reduce using rule 78 (lval)


State 205

   29 inst: tWHILE '(' expr • ')' inst
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 209


State 206

   30 inst: tIF '(' expr • ')' inst
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 210


State 207

   23 iffalse: tELIF '(' • expr ')' inst
   24        | tELIF '(' • expr ')' inst iffalse

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tREAD        shift, and go to state 25
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '~'          shift, and go to state 36

    fdef     go to state 40
    fcall    go to state 41
    lval     go to state 47
    expr     go to state 211
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 208

   25 iffalse: tELSE instruction •

    $default  reduce using rule 25 (iffalse)


State 209

   29 inst: tWHILE '(' expr ')' • inst

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 178
    tIF          shift, and go to state 179
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    inst     go to state 212
    fdef     go to state 40
    fcall    go to state 41
    block    go to state 181
    stop     go to state 182
    next     go to state 183
    return   go to state 184
    args     go to state 185
    lval     go to state 47
    expr     go to state 186
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 210

   30 inst: tIF '(' expr ')' • inst

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 178
    tIF          shift, and go to state 179
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    inst     go to state 213
    fdef     go to state 40
    fcall    go to state 41
    block    go to state 181
    stop     go to state 182
    next     go to state 183
    return   go to state 184
    args     go to state 185
    lval     go to state 47
    expr     go to state 186
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 211

   23 iffalse: tELIF '(' expr • ')' inst
   24        | tELIF '(' expr • ')' inst iffalse
   85 expr: expr • '+' expr
   86     | expr • '-' expr
   87     | expr • '*' expr
   88     | expr • '/' expr
   89     | expr • '%' expr
   90     | expr • '<' expr
   91     | expr • '>' expr
   92     | expr • tGE expr
   93     | expr • tLE expr
   94     | expr • tNE expr
   95     | expr • tEQ expr
   96     | expr • tAND expr
   97     | expr • tOR expr

    tOR   shift, and go to state 99
    tAND  shift, and go to state 100
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    tGE   shift, and go to state 103
    tLE   shift, and go to state 104
    tEQ   shift, and go to state 105
    tNE   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111
    ')'   shift, and go to state 214


State 212

   29 inst: tWHILE '(' expr ')' inst •

    $default  reduce using rule 29 (inst)


State 213

   30 inst: tIF '(' expr ')' inst •

    $default  reduce using rule 30 (inst)


State 214

   23 iffalse: tELIF '(' expr ')' • inst
   24        | tELIF '(' expr ')' • inst iffalse

    tINTEGER     shift, and go to state 17
    tREAL        shift, and go to state 18
    tIDENTIFIER  shift, and go to state 19
    tSTRING      shift, and go to state 20
    tNULLPTR     shift, and go to state 21
    tWHILE       shift, and go to state 178
    tIF          shift, and go to state 179
    tREAD        shift, and go to state 25
    tSTOP        shift, and go to state 26
    tNEXT        shift, and go to state 27
    tRETURN      shift, and go to state 28
    tRECURSION   shift, and go to state 29
    tSIZEOF      shift, and go to state 30
    '+'          shift, and go to state 31
    '-'          shift, and go to state 32
    '('          shift, and go to state 33
    '['          shift, and go to state 70
    '{'          shift, and go to state 35
    '~'          shift, and go to state 36

    $default  reduce using rule 73 (args)

    inst     go to state 215
    fdef     go to state 40
    fcall    go to state 41
    block    go to state 181
    stop     go to state 182
    next     go to state 183
    return   go to state 184
    args     go to state 185
    lval     go to state 47
    expr     go to state 186
    integer  go to state 49
    real     go to state 50
    string   go to state 51


State 215

   23 iffalse: tELIF '(' expr ')' inst •
   24        | tELIF '(' expr ')' inst • iffalse

    tELIF  shift, and go to state 199
    tELSE  shift, and go to state 200

    $default  reduce using rule 23 (iffalse)

    iffalse  go to state 216


State 216

   24 iffalse: tELIF '(' expr ')' inst iffalse •

    $default  reduce using rule 24 (iffalse)
